{"version":3,"file":"static/js/43.06e92073.chunk.js","mappings":"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","sources":["components/Profile/MyPosts/ProfileInfo/profileinfo.module.css","components/Profile/MyPosts/ProfileInfo/profileStatus.js","components/Profile/MyPosts/ProfileInfo/profileInfo.js","webpack://project1/./src/components/Profile/MyPosts/myPosts.module.css?9933","webpack://project1/./src/components/Profile/MyPosts/Post/post.module.css?106c","components/Profile/MyPosts/Post/post.js","components/Profile/MyPosts/myPosts.js","components/Profile/MyPosts/myPostsContainer.js","components/Profile/profile.js","components/Profile/profileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"profileinfo_descriptionBlock__ZRMPu\"};","import React, {useEffect, useState} from \"react\";\n\n\nconst ProfileStatus =(props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>\n                    {props.status || \"Double click to add new post text\"}\n                </span>\n            </div>}\n\n            {editMode &&\n                <div>\n                    <input autoFocus={true}\n                           onChange={onStatusChange}\n                           onBlur={deactivateEditMode}\n                           value={status}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatus","import classes from \"./profileinfo.module.css\";\nimport Preloader from \"../../../common/preloader/preloader\";\nimport ProfileStatus from \"./profileStatus\";\n\n\nfunction ProfileInfo(props) {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n           {/* <div>\n                <img src=\"https://www.industrialempathy.com/img/remote/ZiClJf-640w.avif\" alt=\"main wallpaper\"/>\n            </div>*/}\n            <div className={classes.descriptionBlock}>\n                <img src={props.profile.photos.large} alt='large'/>\n                <div>{props.profile.fullName}</div>\n                <div>{props.profile.aboutMe}</div>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n)\n}\n\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"myPosts_postsBlock__RhOud\",\"posts\":\"myPosts_posts__OTqaL\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__y07+k\",\"likes\":\"post_likes__L+Ct7\"};","import classes from \"./post.module.css\";\n\n\nfunction Post(props) {\n    return (\n    <div className={classes.item}>\n        <img src='https://www.pngall.com/wp-content/uploads/12/Avatar-Profile-PNG-Free-Image.png' alt='avatar'/>\n        {props.message}\n        <div>\n            <span className={classes.likes}>\n                likes {props.likesCount}\n            </span>\n        </div>\n    </div>\n    )\n}\n\nexport default Post","import classes from \"./myPosts.module.css\";\nimport Post from \"./Post/post\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utilities/validators/validators\";\nimport {FormControl} from \"../../common/formControls/formControls\";\n\n\nconst MyPosts = React.memo(props => {\n    let postElements = props.posts.map(post =>\n        <Post message={post.text} likesCount={post.likesCount} key={post.id}/>\n    )\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n\n        <div className={classes.postsBlock}>\n            <h3>My posts</h3>\n            <AddPostFormRedux onSubmit={onAddPost}/>\n            <div>\n                <div className={classes.posts}>\n                    {postElements}\n                </div>\n            </div>\n        </div>\n    )\n})\n\n\nconst Textarea = FormControl(\"textarea\")\nlet maxLength30 = maxLengthCreator(30)\n\nconst AddPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name={'newPostText'}\n                       placeholder={'Enter new post text'}\n                       validate={[required, maxLength30, ]}\n                />\n                <div>\n                    <button>Add post</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\n\nconst AddPostFormRedux = reduxForm({\n    form: 'profileAddPostForm'\n})(AddPostForm)\n\n\nexport default MyPosts","import {addPost} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./myPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\n\nexport default MyPostsContainer","import ProfileInfo from \"./MyPosts/ProfileInfo/profileInfo\";\nimport MyPostsContainer from \"./MyPosts/myPostsContainer\";\nimport React from \"react\";\n\n\nfunction Profile(props) {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\n\nexport default Profile","import React from \"react\";\nimport Profile from \"./profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {useMatch, Navigate} from 'react-router-dom'\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component{\n\n    componentDidMount() {\n        let userID = this.props.match.params.userID\n        if (!userID) {\n            userID = this.props.authorizedUserID\n            if (!userID) {\n                <Navigate to={'/login'}/>\n            }\n        }\n\n        this.props.getProfile(userID)\n        this.props.getStatus(userID)\n    }\n\n    render () {\n        return <Profile {...this.props}\n        />\n    }\n}\n\n\nconst ProfileMatch = (props) => {\n    let match = useMatch(\"/profile/:userID\");\n\n    return (\n        <ProfileContainer {...props} match={match}/>\n    )\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserID: state.auth.userID,\n    isAuth: state.auth.isAuth,\n})\n\n\nexport default compose(\n    connect(mapStateToProps,{getProfile, getStatus, updateStatus}),\n    //withAuthRedirect\n)(ProfileMatch)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","profile","className","classes","src","photos","large","alt","fullName","aboutMe","message","likesCount","MyPosts","React","postElements","posts","map","post","text","id","AddPostFormRedux","onSubmit","values","addPost","newPostText","Textarea","FormControl","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","connect","state","profilePage","ProfileContainer","userID","this","match","params","authorizedUserID","getProfile","getStatus","compose","auth","isAuth","useMatch"],"sourceRoot":""}