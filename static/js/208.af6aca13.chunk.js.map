{"version":3,"file":"static/js/208.af6aca13.chunk.js","mappings":"oKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCajN,MAVA,SAAoBA,GAEhB,OACI,iBAAKC,UAAS,UAAKC,GAAnB,WACI,gBAAKC,IAAKH,EAAMI,OAAQC,IAAI,YAC5B,SAAC,KAAD,CAASC,GAAI,YAAcN,EAAMO,GAAIN,UAAWC,EAAhD,SAAiEF,EAAMQ,W,QCKnF,MAVA,SAAiBR,GAGb,OACI,gBAAKC,UAAWC,EAAhB,SACKF,EAAMS,W,sCC0BnB,IAAMC,GAAWC,EAAAA,EAAAA,GAAY,YAEvBC,GAAsBC,EAAAA,EAAAA,GAAiB,KAoBvCC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,wBADkBD,EAlBL,SAACf,GAEpB,OACI,iBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,4BACI,SAACC,EAAA,EAAD,CAAOC,UAAWV,EACXW,SAAU,CAACC,EAAAA,EAAUV,GACrBJ,KAAM,iBACNe,YAAa,wBACpB,0BACI,uDAapB,EArDA,SAAiBvB,GACb,IAAIwB,EAAkBxB,EAAMyB,aAAaC,QAAQC,KAAI,SAAAC,GAAM,OACvD,SAAC,EAAD,CAAYpB,KAAMoB,EAAOpB,KAAsBD,GAAIqB,EAAOrB,GAAIH,OAAQwB,EAAOxB,QAAzCwB,EAAOrB,OAG3CsB,EAAmB7B,EAAMyB,aAAaK,SAASH,KAAI,SAAAlB,GAAO,OAC1D,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQF,OAOpD,OACI,iBAAKN,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKsB,KAEL,gBAAKvB,UAAWC,EAAhB,SACK2B,KAEL,SAACf,EAAD,CAAqBG,SAZT,SAACc,GACjB/B,EAAMgC,WAAWD,EAAOE,uB,mBCJhC,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KATkB,SAACC,GAEnB,MAAO,CACHX,aAAcW,EAAMX,gBAOpB,CAACO,WAAAA,EAAAA,IAAeK,EAAAA,EAFxB,CAGEC,I,gJCbWD,EAAmB,SAACE,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKzC,MAAM0C,QAET,SAACH,GAAD,UAAeE,KAAKzC,SAFI,SAAC,KAAD,CAAUM,GAAI,eAJV,GAEXqC,EAAAA,WAYhC,OAAOR,EAAAA,EAAAA,KAJ0B,SAACC,GAAD,MAAY,CACzCM,OAAQN,EAAMQ,KAAKF,UAGhBP,CAAoCK","sources":["webpack://project1/./src/components/Dialogs/dialogs.module.css?1969","components/Dialogs/DialogItem/dialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/dialogs.js","components/Dialogs/dialogsContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__LaVAm\",\"dialogsItems\":\"dialogs_dialogsItems__KJJ01\",\"dialog\":\"dialogs_dialog__mPS26\",\"active\":\"dialogs_active__Rrjen\",\"messages\":\"dialogs_messages__Srn8e\",\"message\":\"dialogs_message__veouE\"};","import classes from \"../dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction DialogItem(props) {\n\n    return (\n        <div className={`${classes.dialog}`}>\n            <img src={props.avatar} alt='avatar'/>\n            <NavLink to={\"/dialogs/\" + props.id} className={classes.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem","import classes from \"../dialogs.module.css\";\nimport React from \"react\";\n\n\nfunction Message(props) {\n\n\n    return (\n        <div className={classes.message}>\n            {props.message}\n        </div>\n    )\n}\n\nexport default Message","import classes from './dialogs.module.css'\nimport DialogItem from \"./DialogItem/dialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {FormControl} from \"../common/formControls/formControls\";\nimport {maxLengthCreator, required} from \"../../utilities/validators/validators\";\n\n\nfunction Dialogs(props) {\n    let dialogsElements = props.messagesPage.dialogs.map(dialog =>\n        <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avatar={dialog.avatar}/>\n    )\n\n    let messagesElements = props.messagesPage.messages.map(message =>\n        <Message message={message.message} key={message.id}/>\n    )\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageText)\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messagesElements}\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    )\n}\n\nconst Textarea = FormControl(\"textarea\")\n\nconst maxMessageLength100 = maxLengthCreator(100)\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxMessageLength100 ]}\n                       name={'newMessageText'}\n                       placeholder={'Enter your message'}/>\n                <div>\n                    <button>Send message</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm)\n\n\nexport default Dialogs","import {addMessage} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        messagesPage: state.messagesPage,\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps,\n        {addMessage,}), withAuthRedirect\n)(Dialogs)","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth,\n    })\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n}"],"names":["props","className","classes","src","avatar","alt","to","id","name","message","Textarea","FormControl","maxMessageLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","dialogsElements","messagesPage","dialogs","map","dialog","messagesElements","messages","values","addMessage","newMessageText","compose","connect","state","withAuthRedirect","Dialogs","Component","RedirectComponent","this","isAuth","React","auth"],"sourceRoot":""}